"""pyqtgraphで画像を表示する最小コード(とする)"""
import sys

import numpy as np
from PyQt5 import QtWidgets
import pyqtgraph as pg
from colour import Color

# # サンプル配列
# data = np.random.normal(size=(200, 200))
# data[40:80, 40:120] += 4
# data = pg.gaussianFilter(data, (15, 15))
# # data += np.random.normal(size=(200, 200)) * 0.1

# # GUIの制御オブジェクト
# app = QtWidgets.QApplication(sys.argv)
# # ウィンドウ作成
# window = pg.GraphicsLayoutWidget()
# # 画像オブジェクト作成 & 画像をセット
# ################## Add #######################


# blue, red = Color('blue'), Color('red')
# colors = blue.range_to(red, 256)
# colors_array = np.array([np.array(color.get_rgb()) * 255 for color in colors])
# look_up_table = colors_array.astype(np.uint8)
# ################## Add #######################

# image = pg.ImageItem()
# image.setLookupTable(look_up_table)  # Add
# image.setImage(data)
# # 画像を格納するボックス作成 & 画像オブジェクトをセット
# view_box = pg.ViewBox()
# view_box.addItem(image)
# # プロットオブジェクト作成 & 上で作成したview_boxをセット
# plot = pg.PlotItem(viewBox=view_box)
# # ウィンドウにplotを追加
# window.addItem(plot)
# # ウィンドウ表示
# window.show()
# # プログラム終了
# sys.exit(app.exec_())

word = ''' 0.         0.2265625  0.453125   0.6796875  0.90625    1.1328125
  1.359375   1.5859375  1.8125     2.0390625  2.265625   2.4921875
  2.71875    2.9453125  3.171875   3.3984375  3.625      3.8515625
  4.078125   4.3046875  4.53125    4.7578125  4.984375   5.2109375
  5.4375     5.6640625  5.890625   6.1171875  6.34375    6.5703125
  6.796875   7.0234375  7.25       7.4765625  7.703125   7.9296875
  8.15625    8.3828125  8.609375   8.8359375  9.0625     9.2890625
  9.515625   9.7421875  9.96875   10.1953125 10.421875  10.6484375
 10.875     11.1015625 11.328125  11.5546875 11.78125   12.0078125
 12.234375  12.4609375 12.6875    12.9140625 13.140625  13.3671875
 13.59375   13.8203125 14.046875  14.2734375 14.5       14.7265625
 14.953125  15.1796875 15.40625   15.6328125 15.859375  16.0859375
 16.3125    16.5390625 16.765625  16.9921875 17.21875   17.4453125
 17.671875  17.8984375 18.125     18.3515625 18.578125  18.8046875
 19.03125   19.2578125 19.484375  19.7109375 19.9375    20.1640625
 20.390625  20.6171875 20.84375   21.0703125 21.296875  21.5234375
 21.75      21.9765625 22.203125  22.4296875 22.65625   22.8828125
 23.109375  23.3359375 23.5625    23.7890625 24.015625  24.2421875
 24.46875   24.6953125 24.921875  25.1484375 25.375     25.6015625
 25.828125  26.0546875 26.28125   26.5078125 26.734375  26.9609375
 27.1875    27.4140625 27.640625  27.8671875 28.09375   28.3203125
 28.546875  28.7734375 29.        29.2265625 29.453125  29.6796875
 29.90625   30.1328125 30.359375  30.5859375 30.8125    31.0390625
 31.265625  31.4921875 31.71875   31.9453125 32.171875  32.3984375
 32.625     32.8515625 33.078125  33.3046875 33.53125   33.7578125
 33.984375  34.2109375 34.4375    34.6640625 34.890625  35.1171875
 35.34375   35.5703125 35.796875  36.0234375 36.25      36.4765625
 36.703125  36.9296875 37.15625   37.3828125 37.609375  37.8359375
 38.0625    38.2890625 38.515625  38.7421875 38.96875   39.1953125
 39.421875  39.6484375 39.875     40.1015625 40.328125  40.5546875
 40.78125   41.0078125 41.234375  41.4609375 41.6875    41.9140625
 42.140625  42.3671875 42.59375   42.8203125 43.046875  43.2734375
 43.5       43.7265625 43.953125  44.1796875 44.40625   44.6328125
 44.859375  45.0859375 45.3125    45.5390625 45.765625  45.9921875
 46.21875   46.4453125 46.671875  46.8984375 47.125     47.3515625
 47.578125  47.8046875 48.03125   48.2578125 48.484375  48.7109375
 48.9375    49.1640625 49.390625  49.6171875 49.84375   50.0703125
 50.296875  50.5234375 50.75      50.9765625 51.203125  51.4296875
 51.65625   51.8828125 52.109375  52.3359375 52.5625    52.7890625
 53.015625  53.2421875 53.46875   53.6953125 53.921875  54.1484375
 54.375     54.6015625 54.828125  55.0546875 55.28125   55.5078125
 55.734375  55.9609375 56.1875    56.4140625 56.640625  56.8671875
 57.09375   57.3203125 57.546875  57.7734375'''
  
  
two = """-2.42403087 -2.27252894 -2.12102701 -1.96952508 -1.81802315 -1.66652122
 -1.5150193  -1.36351737 -1.21201544 -1.06051351 -0.90901158 -0.75750965
 -0.60600772 -0.45450579 -0.30300386 -0.15150193  0.          0.15150193
  0.30300386  0.45450579  0.60600772  0.75750965  0.90901158  1.06051351
  1.21201544  1.36351737  1.5150193   1.66652122  1.81802315  1.96952508
  2.12102701  2.27252894"""
  
print(np.fromstring(word, float, sep=' '))